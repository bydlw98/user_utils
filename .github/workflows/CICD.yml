name: CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: x86_64-pc-windows-msvc  , os: windows-2022  }
          - { target: x86_64-apple-darwin     , os: macos-12      }

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{ matrix.job.target }}
    - name: Build
      run: cargo build --locked --verbose --target=${{ matrix.job.target }}
    - name: Run tests
      run: cargo test --locked --verbose --target=${{ matrix.job.target }}


  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt
    - name: Check if code is formatted
      run: cargo fmt --check


  rustdoc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    - name: Check if documentation can be build
      run: cargo doc --no-deps
